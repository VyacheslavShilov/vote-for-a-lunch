DROP TABLE dishs IF EXISTS;
DROP TABLE menus IF EXISTS;
DROP TABLE restaurants IF EXISTS;
DROP TABLE user_roles IF EXISTS;
DROP TABLE votess IF EXISTS;
DROP TABLE users IF EXISTS;
-- DROP SEQUENCE global_seq IF EXISTS;

-- CREATE SEQUENCE GLOBAL_SEQ AS INTEGER START WITH 100000;

CREATE TABLE users
(
  id               INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  name             VARCHAR(255)            NOT NULL,
  email            VARCHAR(255)            NOT NULL,
  password         VARCHAR(255)            NOT NULL,
  registered       TIMESTAMP DEFAULT now() NOT NULL,
  enabled          BOOLEAN DEFAULT TRUE    NOT NULL
);
CREATE UNIQUE INDEX users_unique_email_idx ON USERS (email);

CREATE TABLE user_roles
(
  user_id         INTEGER NOT NULL,
  role            VARCHAR(255),
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES USERS (id)  ON DELETE CASCADE
);

CREATE TABLE restaurants
(
  id               INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  name             VARCHAR(255)            NOT NULL,
  enabled          BOOLEAN DEFAULT TRUE    NOT NULL
);
CREATE UNIQUE INDEX restaurants_unique_name_idx ON restaurants (name);

/*CREATE TABLE menus
(
  id               INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  date_time   TIMESTAMP    NOT NULL,
  restaurant_id INTEGER      NOT NULL,
  FOREIGN KEY (restaurant_id) REFERENCES restaurants (id) ON DELETE CASCADE
);*/

CREATE TABLE dishs
(
  id               INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  date_time   TIMESTAMP DEFAULT now()    NOT NULL,
  name             VARCHAR(255)            NOT NULL,
  restaurant_id INTEGER      NOT NULL,
  price         INTEGER NOT NULL,
  FOREIGN KEY (restaurant_id) REFERENCES restaurants (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX dishs_unique_name_idx ON dishs (name);

CREATE TABLE votes
(
  id          INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  date_time   TIMESTAMP    NOT NULL,
  user_id     INTEGER      NOT NULL,
  restaurant_id INTEGER      NOT NULL,
  CONSTRAINT date_time_user_idx UNIQUE (date_time, user_id),
  FOREIGN KEY (user_id) REFERENCES USERS (id) ON DELETE CASCADE,
  FOREIGN KEY (restaurant_id) REFERENCES restaurants (id) ON DELETE CASCADE
);
-- CREATE UNIQUE INDEX meals_unique_user_datetime_idx ON meals (user_id, date_time)

